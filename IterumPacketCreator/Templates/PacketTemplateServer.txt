using NetStack.Compression;
using Magistr.Network;
using Magistr.Buffers;
using Magistr.Math;

namespace Packets
{
    public struct {0} : ISerializablePacket
    {
        private const byte channelId = {4};
        public byte ChannelId => channelId;

        // fields
{3}

        public void Deserialize(byte[] packet)
        {
            var data = StaticBuffers.PacketToBitBuffer(packet);
			data.ReadByte();
            // deser
{1}

            StaticBuffers.Release(data);
        }

        public byte[] Serialize()
        {
            var data = StaticBuffers.BitBuffers.Acquire();
			data.AddByte((byte)ChannelId);

            // ser
{2}

            return StaticBuffers.BitBufferToPacket(data);
        }

{5}

    }
}
