name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        
    - name: Adjust NuGet Config Credentials
      run: |
        rm -f ./nuget.config    
        
    - name: Restore Iterum.Log
      run: |
        dotnet restore Iterum.Log/Iterum.Log.csproj
    
    - name: Restore Iterum.Math
      run: |
        dotnet restore Iterum.Math/Iterum.Math.csproj
            
    - name: Restore Iterum.Physics
      run: |
        dotnet restore Iterum.Physics/Iterum.Physics.csproj
        
    - name: Pack Iterum.Log
      if: always()
      run: |
        dotnet pack Iterum.Log/Iterum.Log.csproj --configuration Release
        dotnet nuget push Iterum.Log/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json --skip-duplicate
        
    - name: Pack Iterum.Math
      if: always()
      run: |
        dotnet pack Iterum.Math/Iterum.Math.csproj --configuration Release
        dotnet nuget push Iterum.Math/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Pack Iterum.Math2
      if: always()
      run: |
        dotnet pack Iterum.Math2/Iterum.Math2.csproj --configuration Release
        dotnet nuget push Iterum.Math2/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json  --skip-duplicate

    - name: Pack Iterum.Core
      if: always()
      run: |
        dotnet pack Iterum.Core/Iterum.Core.csproj --configuration Release
        dotnet nuget push Iterum.Core/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Pack Iterum.Physics
      if: always()
      run: |
        dotnet pack Iterum.Physics/Iterum.Physics.csproj --configuration Release
        dotnet nuget push Iterum.Physics/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Pack Iterum.Network
      if: always()
      run: |
        dotnet pack Iterum.Network/Iterum.Network.csproj --configuration Release
        dotnet nuget push Iterum.Network/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Pack Iterum.PhysX
      if: always()
      run: |
        dotnet pack Iterum.PhysX/Iterum.PhysX.csproj --configuration Release
        dotnet nuget push Iterum.PhysX/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Pack Iterum.ThingTypes
      if: always()
      run: |
        dotnet pack Iterum.ThingTypes/Iterum.ThingTypes.csproj --configuration Release
        dotnet nuget push Iterum.ThingTypes/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Pack Iterum.Telepathy
      if: always()
      run: |
        dotnet pack Iterum.Telepathy/Iterum.Telepathy.csproj --configuration Release
        dotnet nuget push Iterum.Telepathy/**/*.nupkg  --api-key ${{secrets.NUGET_API}} --source https://api.nuget.org/v3/index.json --skip-duplicate

